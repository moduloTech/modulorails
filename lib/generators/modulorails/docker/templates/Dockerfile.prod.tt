# BUILD IMAGE
FROM ruby:<%= Modulorails.data.ruby_version %>-alpine as builder

ENV RAILS_ENV=production \
    SECRET_KEY_BASE=1
WORKDIR /app

RUN apk add --update --no-cache \
    alpine-sdk \
    nodejs \
    tzdata \
    yarn \
    shared-mime-info \
    gcompat \
    <%- adapter = Modulorails.data.adapter -%>
    <%- if adapter =~ /mysql/ -%>
    mysql-dev
    <%- else -%>
    postgresql-dev
    <%- end -%>
RUN gem install bundler -v <%= Modulorails.data.bundler_version %>

COPY Gemfile Gemfile.lock ./
RUN bundle config set --local deployment 'true'
RUN bundle check || bundle install --jobs=2 \
    && rm -rf vendor/bundle/ruby/*/cache/*

<%- webpack_container_needed = Modulorails.data.webpacker_version.present? -%>
<%- if webpack_container_needed -%>
COPY package.json yarn.lock ./
RUN yarn install
<%- end-%>

COPY . .
RUN bundle exec rake assets:precompile

# FINAL IMAGE
FROM ruby:<%= Modulorails.data.ruby_version %>-alpine

ENV RAILS_ENV=development
ENV EDITOR=vim
WORKDIR /app

RUN apk add --update --no-cache \
    curl \
    git \
    nodejs \
    tzdata \
    shared-mime-info \
    vim \
    <%- adapter = Modulorails.data.adapter -%>
    <%- if adapter =~ /mysql/ -%>
    mysql-dev \
    <%- else -%>
    postgresql-dev \
    <%- end -%>
    && rm -rf .git/

COPY --from=builder /app .

RUN bundle config --local path vendor/bundle \
    && bundle config --local without development:test:assets

EXPOSE 3000

ENTRYPOINT ["./entrypoints/docker-entrypoint.sh"]
